#각 행의 첫 번째 알파벳 ascii 번호를 출력
SELECT ASCII(CustomerName) AS NumCodeOfFirstChar
FROM customers;

SELECT customername
FROM customers

SELECT ASCII("A");

# CHAR_LENGTH(문자열 길이 출력)
SELECT CHAR_LENGTH("SQL Tutorial") AS LengthOfString;

SELECT customername, CHAR_LENGTH(CUSTOMERNAME)
FROM CUSTOMERS
WHERE CHAR_LENGTH(CUSTOMERNAME) > 30;

#CHARACTER_LENGTH(문자열 길이 출력)
SELECT CHARACTER_LENGTH("SQL Tutorial") AS LengthOfString;

SELECT CHARACTER_LENGTH(CustomerName) AS LengthOfName
FROM customers;

#CONCAT(EXPRESSION만 있다)
SELECT CONCAT("SQL ", "Tutorial ", "is ", "fun!") AS ConcatenatedString;

SELECT * FROM customers;

SELECT CONCAT(CUSTOMERNAME, ',', CONTACTNAME)
FROM customers;

#CONCAT_WS(첫 번째는 연결해주는 표시)
SELECT CONCAT_WS("-", "SQL", "Tutorial", "is", "fun!") AS ConcatenatedString;

#field(첫 번째 문자가 몇 번째에 있는가?)
SELECT FIELD("q", "s", "q", "l");

SELECT FIELD("Q", "s", "q", "l");

#find_in set(q위치 찾기)
SELECT FIND_IN_SET("q", "s,q,l");

#format(천자리 구분, 소수점 2번째까지)
SELECT FORMAT(250500.5634, 2);

#insert(첫 문자열의 1~9번째를 "example"로 변경)
SELECT INSERT("W3Schools.com", 1, 9, "Example");

#select instr(문자 위치 찾기)
SELECT INSTR("W3Schools.com", "3") AS MatchPosition;

# 대문자를 소문자로 변경
SELECT LCASE("SQL Tutorial is FUN!");

SELECT LEFT("SQL Tutorial", 3) AS ExtractString;
#SQL

SELECT LENGTH("SQL Tutorial") AS LengthOfString;
#12

SELECT LOCATE("3", "W3Schools.com") AS MatchPosition;
#2

SELECT LOWER("SQL Tutorial is FUN!");
#sql tutorial is fun!

SELECT LPAD("SQL Tutorial", 20, "ABC");
#ABCABCABSQL Tutorial

SELECT LTRIM("     SQL Tutorial") AS LeftTrimmedString;
#SQL Tutorial

SELECT MID("SQL Tutorial", 5, 3) AS ExtractString;
#Tut

SELECT POSITION("3" IN "W3Schools.com") AS MatchPosition;
#2

SELECT REPEAT("SQL Tutorial", 3);
# SQL TutorialSQL TutorialSQL Tutorial

SELECT REPLACE("SQL Tutorial", "SQL", "HTML");
#HTML Tutorial

SELECT REVERSE("SQL Tutorial");
#lairotuT LQS

SELECT RIGHT("SQL Tutorial is cool", 4) AS ExtractString;
#cool

SELECT RPAD("SQL Tutorial", 20, "ABC");
#SQL TutorialABCABCAB

SELECT RTRIM("SQL Tutorial     ") AS RightTrimmedString;
#SQL Tutorial

SELECT SPACE(10);
# 

SELECT STRCMP("SQL Tutorial", "SQL Tutorial");
# 0

SELECT SUBSTR("SQL Tutorial", 5, 3) AS ExtractString;
# Tut

SELECT SUBSTRING("SQL Tutorial", 5, 3) AS ExtractString;
#Tut

SELECT SUBSTRING_INDEX("www.w3schools.com", ".", 1);
#www

SELECT TRIM('    SQL Tutorial    ') AS TrimmedString;
#SQL Tutorial

SELECT UCASE("SQL Tutorial is FUN!");
#SQL TUTORIAL IS FUN!

SELECT UPPER("SQL Tutorial is FUN!");
#SQL TUTORIAL IS FUN!

###################Numeric Functions
SELECT ABS(-243.5);
#243.5

SELECT ACOS(0.25);
#1.318116071652818

SELECT ASIN(0.25);
#0.25268025514207865

SELECT ATAN(2.5);
#1.1902899496825317

SELECT ATAN2(0.50, 1);
#0.4636476090008061

SELECT AVG(Price) AS AveragePrice FROM products;
#28.866363636363637

SELECT CEIL(25.75);
#26

SELECT CEILING(25.75);
#26

SELECT COS(2);
#-0.4161468365471424

SELECT COT(6);
#-3.436353004180128

SELECT COUNT(ProductID) AS NumberOfProducts FROM products;
#77

SELECT DEGREES(1.5);
#85.94366926962348

SELECT 10 DIV 5;
#2

SELECT EXP(1);
#2.718281828459045

SELECT FLOOR(25.75);
#25

SELECT GREATEST(3, 12, 34, 8, 25);
#34

SELECT LEAST(3, 12, 34, 8, 25);
#3

SELECT LN(2);
#0.6931471805599453

SELECT LOG(2);
#0.6931471805599453

SELECT LOG10(2);
#0.3010299956639812

SELECT LOG2(6);
#2.584962500721156

SELECT MAX(Price) AS LargestPrice FROM products;
#263.5

SELECT MIN(Price) AS SmallestPrice FROM products;
#2.5

SELECT MOD(18, 4);
#2

SELECT PI();
#3.141593

SELECT POW(4, 2);
#16

SELECT POWER(4, 2);
#16

SELECT RADIANS(180);
#3.141592653589793

SELECT RAND();
#0.7384623463623806

SELECT ROUND(135.375, 2);
#135.38

SELECT SIGN(255.5);
#1

SELECT SIN(2);
#0.9092974268256817

SELECT SQRT(64);
#8

SELECT SUM(Quantity) AS TotalItemsOrdered FROM order_details;
#12743

SELECT TAN(1.75);
#-5.52037992250933

SELECT TRUNCATE(135.375, 2);
#135.37

#############DATE FUNCTION
SELECT ADDDATE("2017-06-15", INTERVAL 10 DAY);
#2017-06-25

SELECT ADDTIME("2017-06-15 09:34:21", "2");
#2017-06-15 09:34:23

SELECT CURDATE();
#2021-07-22

SELECT CURRENT_DATE();
#2021-07-22

SELECT CURRENT_TIME();
#17:26:39

SELECT CURRENT_TIMESTAMP();
#2021-07-22 17:26:51

SELECT CURTIME();
#17:27:05

SELECT DATE("2017-06-15");
#2017-06-15

SELECT DATEDIFF("2017-06-25", "2017-06-15");
#10

SELECT DATE_ADD("2017-06-15", INTERVAL 10 DAY);
#2017-06-25

SELECT DATE_FORMAT("2017-06-15", "%Y");
#2017

SELECT DATE_SUB("2017-06-15", INTERVAL 10 DAY);
#2017-06-05

SELECT DAY("2017-06-15");
#15

SELECT DAYNAME("2017-06-15");
#Thursday

SELECT DAYOFMONTH("2017-06-15");
#15

SELECT DAYOFWEEK("2017-06-15");
#5

SELECT DAYOFYEAR("2017-06-15");
#166

SELECT EXTRACT(MONTH FROM "2017-06-15");
#6

SELECT FROM_DAYS(685467);
#1876-09-29

SELECT HOUR("2017-06-20 09:34:00");
#9

SELECT LAST_DAY("2017-06-20");
#2017-06-30

SELECT LOCALTIME();
#2021-07-22 17:30:24

SELECT LOCALTIMESTAMP();
#2021-07-22 17:30:38

SELECT MAKEDATE(2017, 3);
#2017-01-03

SELECT MAKETIME(11, 35, 4);
#11:35:04

SELECT MICROSECOND("2017-06-20 09:34:00.000023");
#23

SELECT MINUTE("2017-06-20 09:34:00");
#34

SELECT MONTH("2017-06-15");
#6

SELECT MONTHNAME("2017-06-15");
#June

SELECT NOW();
#2021-07-22 17:32:12

SELECT PERIOD_ADD(201703, 5);
#201708

SELECT QUARTER("2017-06-15");
#2

SELECT SECOND("2017-06-20 09:34:00.000023");
#0

SELECT SEC_TO_TIME(1);
#00:00:01

SELECT STR_TO_DATE("August 10 2017", "%M %d %Y");
#2017-08-10

SELECT SUBDATE("2017-06-15", INTERVAL 10 DAY);
#2017-06-05

SELECT SUBTIME("2017-06-15 10:24:21.000004", "5.000001");
#2017-06-15 10:24:16.000003

SELECT SYSDATE();
#2021-07-22 18:51:34

SELECT TIME("19:30:10");
#19:30:10

SELECT TIME_FORMAT("19:30:10", "%H %i %s");
#19 30 10

SELECT TIME_TO_SEC("19:30:10");
#70210

SELECT TIMEDIFF("13:10:11", "13:10:10");
#00:00:01

SELECT TIMESTAMP("2017-07-23",  "13:10:11");
#2017-07-23 13:10:11

SELECT TO_DAYS("2017-06-20");
#736865

SELECT TO_DAYS("2017-06-20");
#736865

SELECT WEEK("2017-06-15");
#24

SELECT WEEKDAY("2017-06-15");
#3

SELECT WEEKOFYEAR("2017-06-15");
#24

SELECT YEAR("2017-06-15");
#2017

SELECT YEARWEEK("2017-06-15");
#201724