MySQL  


SELECT functions 
source: https://jaehoney.tistory.com/53 




[STRING FUNCTIONS]

Name		Description
ASCII()			Return numeric value of left-most character
BIN()			Return a string containing binary representation of a number
BIT_LENGTH()		Return length of argument in bits
CHAR()			Return the character for each integer passed
CHAR_LENGTH()		Return number of characters in argument
CHARACTER_LENGTH()	Synonym for CHAR_LENGTH()
CONCAT()		Return concatenated string
CONCAT_WS()		Return concatenate with separator
ELT()			Return string at index number
EXPORT_SET()		Return a string such that for every bit set in the value bits, you get an on string and for every unset bit, you get an off string
FIELD()			Index (position) of first argument in subsequent arguments
FIND_IN_SET()		Index (position) of first argument within second argument
FORMAT()		Return a number formatted to specified number of decimal places
FROM_BASE64()		Decode base64 encoded string and return result
HEX()			Hexadecimal representation of decimal or string value
INSERT()			Insert substring at specified position up to specified number of characters
INSTR()			Return the index of the first occurrence of substring
LCASE()			Synonym for LOWER()
LEFT()			Return the leftmost number of characters as specified
LENGTH()			Return the length of a string in bytes
LIKE			Simple pattern matching
LOAD_FILE()		Load the named file
LOCATE()			Return the position of the first occurrence of substring
LOWER()			Return the argument in lowercase
LPAD()			Return the string argument, left-padded with the specified string
LTRIM()			Remove leading spaces
MAKE_SET()		Return a set of comma-separated strings that have the corresponding bit in bits set
MATCH			Perform full-text search
MID()			Return a substring starting from the specified position
NOT LIKE			Negation of simple pattern matching
NOT REGEXP		Negation of REGEXP
OCT()			Return a string containing octal representation of a number
OCTET_LENGTH()		Synonym for LENGTH()
ORD()			Return character code for leftmost character of the argument
POSITION()		Synonym for LOCATE()
QUOTE()			Escape the argument for use in an SQL statement
REGEXP			Whether string matches regular expression
REGEXP_INSTR()		Starting index of substring matching regular expression
REGEXP_LIKE()		Whether string matches regular expression
REGEXP_REPLACE()		Replace substrings matching regular expression
REGEXP_SUBSTR()		Return substring matching regular expression
REPEAT()			Repeat a string the specified number of times
REPLACE()		Replace occurrences of a specified string
REVERSE()			Reverse the characters in a string
RIGHT()			Return the specified rightmost number of characters
RLIKE			Whether string matches regular expression
RPAD()			Append string the specified number of times
RTRIM()			Remove trailing spaces
SOUNDEX()		Return a soundex string
SOUNDS LIKE		Compare sounds
SPACE()			Return a string of the specified number of spaces
STRCMP()			Compare two strings
SUBSTR()			Return the substring as specified
SUBSTRING()		Return the substring as specified
SUBSTRING_INDEX()		Return a substring from a string before the specified number of occurrences of the delimiter
TO_BASE64()		Return the argument converted to a base-64 string
TRIM()			Remove leading and trailing spaces
UCASE()			Synonym for UPPER()
UNHEX()			Return a string containing hex representation of a number
UPPER()			Convert to uppercase
WEIGHT_STRING()		Return the weight string for a string




[DATE FUNCTIONS]


Name					Description
ADDDATE()				Add time values (intervals) to a date value
ADDTIME()				Add time
CONVERT_TZ()				Convert from one time zone to another
CURDATE()				Return the current date
CURRENT_DATE(), CURRENT_DATE		Synonyms for CURDATE()
CURRENT_TIME(), CURRENT_TIME		Synonyms for CURTIME()
CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP	Synonyms for NOW()
CURTIME()				Return the current time
DATE()					Extract the date part of a date or datetime expression
DATE_ADD()				Add time values (intervals) to a date value
DATE_FORMAT()				Format date as specified
DATE_SUB()				Subtract a time value (interval) from a date
DATEDIFF()				Subtract two dates
DAY()					Synonym for DAYOFMONTH()
DAYNAME()				Return the name of the weekday
DAYOFMONTH()				Return the day of the month (0-31)
DAYOFWEEK()				Return the weekday index of the argument
DAYOFYEAR()				Return the day of the year (1-366)
EXTRACT()				Extract part of a date
FROM_DAYS()				Convert a day number to a date
FROM_UNIXTIME()				Format Unix timestamp as a date
GET_FORMAT()				Return a date format string
HOUR()					Extract the hour
LAST_DAY				Return the last day of the month for the argument
LOCALTIME(), LOCALTIME			 Synonym for NOW()
LOCALTIMESTAMP, LOCALTIMESTAMP()		Synonym for NOW()
MAKEDATE()				Create a date from the year and day of year
MAKETIME()				Create time from hour, minute, second
MICROSECOND()				Return the microseconds from argument
MINUTE()					Return the minute from the argument
MONTH()					Return the month from the date passed
MONTHNAME()				Return the name of the month
NOW()					Return the current date and time
PERIOD_ADD()				Add a period to a year-month
PERIOD_DIFF()				Return the number of months between periods
QUARTER()				Return the quarter from a date argument
SEC_TO_TIME()				Converts seconds to 'hh:mm:ss' format
SECOND()					Return the second (0-59)
STR_TO_DATE()				Convert a string to a date
SUBDATE()				Synonym for DATE_SUB() when invoked with three arguments
SUBTIME()				Subtract times
SYSDATE()				Return the time at which the function executes
TIME()					Extract the time portion of the expression passed
TIME_FORMAT()				Format as time
TIME_TO_SEC()				Return the argument converted to seconds
TIMEDIFF()				Subtract time
TIMESTAMP()				With a single argument, this function returns the date or datetime expression; with two arguments, the sum of the arguments
TIMESTAMPADD()				Add an interval to a datetime expression
TIMESTAMPDIFF()				Subtract an interval from a datetime expression
TO_DAYS()				Return the date argument converted to days
TO_SECONDS()				Return the date or datetime argument converted to seconds since Year 0
UNIX_TIMESTAMP()				Return a Unix timestamp
UTC_DATE()				Return the current UTC date
UTC_TIME()				Return the current UTC time
UTC_TIMESTAMP()				Return the current UTC date and time
WEEK()					Return the week number
WEEKDAY()				Return the weekday index
WEEKOFYEAR()				Return the calendar week of the date (1-53)
YEAR()					Return the year
YEARWEEK()				Return the year and week




[numeric functions]


Name		Description
%, MOD		Modulo operator
*		Multiplication operator
+		Addition operator
-		Minus operator
-		Change the sign of the argument
/		Division operator
ABS()		Return the absolute value
ACOS()		Return the arc cosine
ASIN()		Return the arc sine
ATAN()		Return the arc tangent
ATAN2(), ATAN()	Return the arc tangent of the two arguments
CEIL()		Return the smallest integer value not less than the argument
CEILING()		Return the smallest integer value not less than the argument
CONV()		Convert numbers between different number bases
COS()		Return the cosine
COT()		Return the cotangent
CRC32()		Compute a cyclic redundancy check value
DEGREES()	Convert radians to degrees
DIV		Integer division
EXP()		Raise to the power of
FLOOR()		Return the largest integer value not greater than the argument
LN()		Return the natural logarithm of the argument
LOG()		Return the natural logarithm of the first argument
LOG10()		Return the base-10 logarithm of the argument
LOG2()		Return the base-2 logarithm of the argument
MOD()		Return the remainder
PI()		Return the value of pi
POW()		Return the argument raised to the specified power
POWER()		Return the argument raised to the specified power
RADIANS()	Return argument converted to radians
RAND()		Return a random floating-point value
ROUND()		Round the argument
SIGN()		Return the sign of the argument
SIN()		Return the sine of the argument
SQRT()		Return the square root of the argument
TAN()		Return the tangent of the argument
TRUNCATE()	Truncate to specified number of decimal places

[ABBREVIATION FUNCTIONS]


Specifier	Description
%a	Abbreviated weekday name (Sun..Sat)
%b	Abbreviated month name (Jan..Dec)
%c	Month, numeric (0..12)
%D	Day of the month with English suffix (0th, 1st, 2nd, 3rd, …)
%d	Day of the month, numeric (00..31)
%e	Day of the month, numeric (0..31)
%f	Microseconds (000000..999999)
%H	Hour (00..23)
%h	Hour (01..12)
%I	Hour (01..12)
%i	Minutes, numeric (00..59)
%j	Day of year (001..366)
%k	Hour (0..23)
%l	Hour (1..12)
%M	Month name (January..December)
%m	Month, numeric (00..12)
%p	AM or PM
%r	Time, 12-hour (hh:mm:ss followed by AM or PM)
%S	Seconds (00..59)
%s	Seconds (00..59)
%T	Time, 24-hour (hh:mm:ss)
%U	Week (00..53), where Sunday is the first day of the week; WEEK() mode 0
%u	Week (00..53), where Monday is the first day of the week; WEEK() mode 1
%V	Week (01..53), where Sunday is the first day of the week; WEEK() mode 2; used with %X
%v	Week (01..53), where Monday is the first day of the week; WEEK() mode 3; used with %x
%W	Weekday name (Sunday..Saturday)
%w	Day of the week (0=Sunday..6=Saturday)
%X	Year for the week where Sunday is the first day of the week, numeric, four digits; used with %V
%x	Year for the week, where Monday is the first day of the week, numeric, four digits; used with %v
%Y	Year, numeric, four digits
%y	Year, numeric (two digits)
%%	A literal % character
%x	x, for any “x” not listed above


